# Authorization

In order to make authorized calls to Todoist APIs, your application must first obtain an access token from the users. This section describes the different ways of obtaining such a token.

For the sake of simplicity we decided to not list the token on every parameter table but please note that the token is required for every resource.

Note that we encourage your application to use the OAuth protocol to obtain the access token from the user.

## OAuth

External applications could obtain a user authorized API token via the OAuth2 protocol. Before getting started, developers need to create their applications in App Management Console and configure a valid OAuth redirect URL. A registered Todoist application is assigned a unique Client ID and Client Secret which are needed for the OAuth2 flow.

This procedure is comprised of 3 steps, which will be described below.

### Step 1: The authorization request

### Step 2: The redirection to your application site

### Step 3: The token exchange

## Revoke Access Tokens

Access tokens obtained via OAuth could be revoked making a JSON request (HTTP POST) to the following endpoint:

https://api.todoist.com/sync/v8/access_tokens/revoke

## Migrate Personal Tokens to OAuth Tokens

Tokens obtained via the old email/password authentication method could be migrated to the new OAuth access token. Migrating your usersâ€™ personal tokens will allow users to see your app in their Todoist Settings page and give them the ability to manage their app authorization.

Here is the migration API endpoint (HTTP POST, with JSON request parameters):

https://api.todoist.com/sync/v8/access_tokens/migrate_personal_token

## Cross Origin Resource Sharing

All API endpoints not related to the 3 OAuth steps support Cross Origin Resource Sharing (CORS) for requests from any origin. The header Access-Control-Allow-Origin: * is set for successfully authenticated requests.

